"""
Calculate pitch trajectory considering
- Initial velocity
- Spin rate and axis
- Relase Height
Forces acting on the ball:
- Magnus force
- Drag force
- Gravity
Initially generated by ChatGPT. All vibe
Spins and velocities parameters are from Kyle Hendricks statcast + made up.
Definition of axis (centred at pitcher's foot):
X - mount to plate.
Y - Left/Right. Positive is to the left (RHP's glove-side)
Z - Vertical. 0 is ground. Positive is above ground.
Thus it is a right-hand axes
"""
import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

from utils.pitch_traj_sim import simulate_pitch_3d, MOUND2PLATE_METERS



# Corrected pitch definitions
# pitches = {
#     "4-Seam Fastball": {"v0_feetpersec": [126.271363, 5.101594, -4.419258], "spin_rpm": 2036.8, "axis": [0, -1, 0]},   # backspin
#     "Changeup":        {"v0_feetpersec": [113.807700, 5.786335, -3.299765], "spin_rpm": 2108.25, "axis": [0, -1, 0]},   # weak backspin
#     "Slider":          {"v0_feetpersec": [113.807700, -2.498911, -3.299765], "spin_rpm": 2108.25, "axis": [0, 0, 1]},   # sidespin (gloveside horizontal break)
#     "Curveball":       {"v0_feetpersec": [101.303143, 2.498911, 1.401676], "spin_rpm": 2684.6, "axis": [0, 1, 0]},  # topspin
# }
pitches = {
    "4-Seam Fastball": {"v0_feetpersec": [126.271363, 0, -4.419258], "spin_rpm": 2036.8, "axis": [0, -1, 0]},   # backspin
    "Changeup":        {"v0_feetpersec": [110, 0, -3.299765], "spin_rpm": 2108.25, "axis": [0, -7, -1]},   # backspin + side spin
    "Slider":          {"v0_feetpersec": [120, -1, 5], "spin_rpm": 2300, "axis": [10, 1, 0.0]},   # spiral + topspin
    "Curveball":       {"v0_feetpersec": [110, 0, 10], "spin_rpm": 2300, "axis": [1, 5, 0.0]},  # spiral + topspin
}


# Plotting 3D trajectories
fig = plt.figure(figsize=(14, 6))

# Side view (x vs z)
ax1 = fig.add_subplot(131)
ax1.set_title('Side View (Height vs Distance)')
ax1.set_xlabel('Distance to Mound (m)')
ax1.set_ylabel('Height (m)')
ax1.grid(True)
ax1.set_xlim([0, MOUND2PLATE_METERS])

# Top view (x vs y)
ax2 = fig.add_subplot(132)
ax2.set_title('Top View (Horizontal Break)')
ax2.set_xlabel('Distance to Mound (m)')
ax2.set_ylabel('Horizontal Deviation (m)')
ax2.grid(True)
ax2.set_xlim([0, MOUND2PLATE_METERS])

ax3 = fig.add_subplot(133, projection="3d")
ax3.set_title('3D View')
ax3.set_xlabel('Distance to Mound (m)')
ax3.set_ylabel('Horizontal Deviation (m)')
ax3.set_zlabel('Height (m)')
ax3.grid(True)
ax3.set_xlim([0, MOUND2PLATE_METERS])

for name, params in pitches.items():
    
    pos, _, times = simulate_pitch_3d(params)
    
    # Plot side view (x vs z)
    ax1.plot(pos[:, 0], pos[:, 2], label=name)
    # Plot top view (x vs y)
    ax2.plot(pos[:, 0], pos[:, 1], label=name)
    # Plot 3d view
    ax3.plot(pos[:, 0], pos[:, 1], pos[:, 2], label=name)

ax1.legend()
ax2.legend()
plt.tight_layout()
plt.show()
